<?php defined('SYSPATH') or die('No direct script access.');

abstract class Folly_Core
{
	
	protected $model;
	protected $action;
	protected $attrs = array();
	
	/**
	 * Factory for instantiating a Folly object.
	 *
	 * @param   mixed  $model
	 * @param   string $action
	 * @param   array  $attrs
	 * @return  Folly
	 */
	public static function factory($model, $action = NULL, array $attrs = NULL)
	{
		return new Folly($model, $action, $attrs);
	}
	
	public function __construct(& $model, $action = NULL, array $attrs = NULL)
	{
		$this->model = $model instanceof Jelly_Model ? $model : Jelly::factory($model);
		$this->action = $action;
		if(is_array($attrs))
		{
			$this->attrs = $attrs;
		}
	}
	
	public function render()
	{
		echo View::factory('folly/form')
			->set('action', $this->action)
			->set('attrs', $this->attrs)
			->bind('model', $this->model);
	}
}
